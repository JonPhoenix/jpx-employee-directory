{"version":3,"sources":["components/Header.jsx","components/Search.jsx","components/EmployeeData.jsx","components/EmployeesTable.jsx","utils/API.js","components/MainDirectory.jsx","App.jsx","index.js"],"names":["Header","className","Component","Search","htmlFor","type","id","onChange","this","props","filterByName","placeholder","EmployeeData","formatDate","date","dateString","dob","toString","yearEnd","indexOf","year","substring","monthEnd","month","substr","day","order","image","name","phone","email","src","alt","href","EmployeesTable","renderEmployee","employeeData","index","undefined","display","scope","title","onClick","sortAlpha","employees","sortArrow","map","axios","get","MainDirectory","state","query","sortEmployees","sortType","createEmployeesList","newEmployeesList","employee","first","last","picture","large","setState","event","target","value","newEmployeeTable","length","toLowerCase","sort","dynamicSort","property","sortOrder","a","b","localeCompare","loadEmployees","API","then","res","data","results","catch","err","console","log","employeesList","sortState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00379d92.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../css/styles.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className='jumbotron jumbotron-fluid'>\n                <div className='container'>\n                    <h1 className='display-3'>Employee Directory</h1>\n                    <p className='lead'>Search for an employee. Sort the employees by name.</p>\n                </div>\n            </header>\n        );\n    };\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                <form className='form-inline'>\n                    <div className='form-group mb-2'>\n                        <label htmlFor='Search' className='sr-only'>Search Employee</label>\n                        <input \n                            type = 'text' \n                            className = 'form-control' \n                            id = 'search-query' \n                            onChange = {this.props.filterByName} \n                            placeholder = 'Search Employee' \n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport '../css/styles.css';\n\nclass EmployeeData extends Component {\n    formatDate = date => {\n        const dateString = date.dob.toString();\n        const yearEnd = dateString.indexOf('-');\n        const year = dateString.substring(0, yearEnd);\n        const monthEnd = dateString.indexOf('-', yearEnd + 1);\n        let month = dateString.substring(yearEnd + 1, monthEnd);\n        month = (month.substr(0, 1) === '0') ? month.substr(1) : month;\n        let day = dateString.substr(monthEnd + 1, 2);\n        day = (day.substr(0, 1) === '0') ? day.substr(1) : day;\n\n        return `${month}-${day}-${year}`;\n    };\n\n    render() {\n        const { order, image, name, phone, email, dob } = this.props;\n        \n        return (\n            <tr>\n                <td>{order}</td>\n                <td><img src={image} alt={name} /></td>\n                <td>{name}</td>\n                <td>{phone}</td>\n                <td><a href={`mailto:${email}`}>{email}</a></td>\n                <td>{this.formatDate({dob})}</td>\n            </tr>\n        );\n    };\n};\n\nexport default EmployeeData;\n","import React, { Component } from 'react';\nimport EmployeeData from './EmployeeData';\n\nclass EmployeesTable extends Component {\n    renderEmployee = (employeeData, index) => {\n        let displayed;\n\n        if (employeeData.display === undefined) {\n            displayed = true;\n        } else {\n            displayed = employeeData.display;\n        };\n\n        if (displayed === true) {\n            return (\n                <EmployeeData \n                    key={index}\n                    order={index + 1}\n                    image={employeeData.image}\n                    name={employeeData.name}\n                    phone={employeeData.phone}\n                    email={employeeData.email}\n                    dob={employeeData.dob}\n                />\n            );\n        };\n    };\n\n    render() {\n        return (\n            <table className='table table-bordered table-striped'>\n                <thead>\n                    <tr>\n                        <th scope='col'>#</th>\n                        <th scope='col'>Image</th>\n                        <th scope='col' className=\"click-me\" title=\"Sort Alphabetically\" \n                            onClick={() => this.props.sortAlpha(this.props.employees)}>Name {this.props.sortArrow}</th>\n                        <th scope='col'>Phone</th>\n                        <th scope='col'>Email</th>\n                        <th scope='col'>DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.props.employees.map((employeeData, index) => (\n                            this.renderEmployee(employeeData, index)\n                        ))\n                    }\n                </tbody>\n            </table>\n        );\n    };\n};\n\nexport default EmployeesTable;","import axios from 'axios';\n\n// Getting all the employees\nexport default {\n    getEmployees: function() {\n        return axios.get('https://randomuser.me/api/?results=200&nat=us');\n    }\n};\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Search from './Search';\nimport EmployeesTable from './EmployeesTable';\nimport API from '../utils/API';\n\nclass MainDirectory extends Component {\n    state = {\n        employees: [],\n        query: '',\n        sortEmployees: [],\n        sortType: ''\n    };\n\n    componentDidMount() {\n       this.loadEmployees();\n    };\n\n    loadEmployees() {\n        API.getEmployees()\n        .then(res => { \n            this.createEmployeesList(res.data.results);\n        })\n        .catch(err => console.log(err));\n    };\n\n    createEmployeesList = employees => {\n        const newEmployeesList = employees.map((employee => {\n            return (\n                {\n                    dob: employee.dob.date,\n                    email: employee.email,\n                    name: `${employee.name.first} ${employee.name.last}`,\n                    phone: employee.phone,\n                    image: employee.picture.large\n                }\n            )\n        }));\n\n        this.setState({\n            employees: newEmployeesList\n        });\n    };\n\n    //Filter by name\n    filterByName = event => {\n        const query = event.target.value;\n        \n        this.setState({query}, () => {\n            let employeesList;\n\n            if (this.state.sortEmployees.length > 0) {\n                employeesList = this.state.sortEmployees;\n            } else {\n                employeesList = this.state.employees;\n            };\n           \n            //True/false to display the matching record with the search:\n            const newEmployeeTable = employeesList.map(employee => {\n                let name = employee.name.toLowerCase();\n\n                if (name.indexOf(this.state.query.toLowerCase()) !== -1) {\n                    return {...employee, display: true}\n                } else {\n                    return {...employee, display: false}\n                }\n            });\n\n            this.setState({\n                employees: newEmployeeTable,\n                sortEmployees: newEmployeeTable\n            });\n        });\n    };\n\n    // Sort employees alphabetically by name\n    sortAlpha = employees => {\n        const sortType = this.state.sortType;\n\n        if (sortType === 'desc' || sortType === '') {\n            //Ascending order:\n            employees.sort(this.dynamicSort('name'));\n            this.setState({\n                sortEmployees: employees,\n                sortType: 'asc'\n            });\n        } else if (sortType === 'asc') {\n            //Descending order:\n            employees.sort(this.dynamicSort('-name'));\n            this.setState({\n                sortEmployees: employees,\n                sortType: 'desc'\n            });\n        };\n    };\n\n    // Sort employees alphabetically reversed by name\n    dynamicSort = property => {\n        var sortOrder = 1;\n\n        if(property[0] === '-') {\n            sortOrder = -1;\n            property = property.substr(1);\n        };\n\n        return function (a,b) {\n            if (sortOrder === -1) {\n                return b[property].localeCompare(a[property]);\n            } else {\n                return a[property].localeCompare(b[property]);\n            }        \n        };\n    };\n\n    render() {\n        let employeesList;\n\n        if (this.state.sortEmployees.length > 0) {\n            employeesList = this.state.sortEmployees;\n        } else {\n            employeesList = this.state.employees;\n        };\n\n        let sortArrow;\n        const sortState = this.state.sortType;\n\n        if (sortState === 'asc') {\n            //down arrow\n            sortArrow = <span>&#9660;</span>;\n        } else if (sortState === 'desc') {\n            //up arrow\n            sortArrow = <span>&#9650;</span>;\n        } else {\n            sortArrow = '';\n        };\n\n        return (\n            <>\n                < Header />\n                < Search \n                    filterByName={this.filterByName} \n                    query={this.state.query} \n                />\n                < EmployeesTable \n                    employees={employeesList} \n                    sortAlpha={this.sortAlpha} \n                    sortArrow={sortArrow} \n                />\n            </>\n        );\n    };\n};\n\nexport default MainDirectory;","import React from 'react';\nimport MainDirectory from './components/MainDirectory';\n\nfunction App() {\n  return (\n    <MainDirectory />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}